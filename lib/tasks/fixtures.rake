# frozen_string_literal: true

namespace :fixtures do
  desc "Generate montrose -> later.js fixtures"
  task generate_laterose: :environment do
    recurrences = []

    # This is copy pasta from the montrose readme
    # daily for 10 occurrences
    recurrences << Montrose.daily(total: 10)

    # test at
    recurrences << Montrose.weekly.on(:monday).at("10:30 am")

    # daily until December 23, 2015
    starts = Date.new(2015, 1, 1)
    ends = Date.new(2015, 12, 23)
    recurrences << Montrose.daily(starts: starts, until: ends)

    # every other day forever
    recurrences << Montrose.daily(interval: 2)

    # every 10 days 5 occurrences
    recurrences << Montrose.every(10.days, total: 5)

    # everyday in January for 3 years
    starts = Time.current.beginning_of_year
    ends = Time.current.end_of_year + 2.years
    recurrences << Montrose.daily(month: :january, between: starts...ends)

    # weekly for 10 occurrences
    recurrences << Montrose.weekly(total: 10)

    # weekly until December 23, 2015
    ends_on = Date.new(2015, 12, 23)
    starts_on = ends_on - 15.weeks
    recurrences << Montrose.every(:week, until: ends_on, starts: starts_on)

    # every other week forever
    recurrences << Montrose.every(2.weeks)

    # weekly on Tuesday and Thursday for five weeks
    # from September 1, 2015 until October 5, 2015
    recurrences << Montrose.weekly(on: [:tuesday, :thursday],
      between: Date.new(2015, 9, 1)..Date.new(2015, 10, 5))

    # every other week on Monday, Wednesday and Friday until December 23 2015,
    # but starting on Tuesday, September 1, 2015
    recurrences << Montrose.every(2.weeks,
      on: [:monday, :wednesday, :friday],
      starts: Date.new(2015, 9, 1))

    # every other week on Tuesday and Thursday, for 8 occurrences
    recurrences << Montrose.weekly(on: [:tuesday, :thursday], total: 8, interval: 2)

    # monthly on the first Friday for ten occurrences
    recurrences << Montrose.monthly(day: { friday: [1] }, total: 10)

    # monthly on the first Friday until December 23, 2015
    recurrences << Montrose.every(:month, day: { friday: [1] }, until: Date.new(2016, 12, 23))

    # every other month on the first and last Sunday of the month for 10 occurrences
    recurrences << Montrose.every(:month, day: { sunday: [1, -1] }, interval: 2, total: 10)

    # monthly on the second-to-last Monday of the month for 6 months
    recurrences << Montrose.every(:month, day: { monday: [-2] }, total: 6)

    # monthly on the third-to-the-last day of the month, forever
    recurrences << Montrose.every(:month, mday: [-3])

    # monthly on the 2nd and 15th of the month for 10 occurrences
    recurrences << Montrose.every(:month, mday: [2, 15], total: 10)

    # monthly on the first and last day of the month for 10 occurrences
    recurrences << Montrose.monthly(mday: [1, -1], total: 10)

    # every 18 months on the 10th thru 15th of the month for 10 occurrences
    recurrences << Montrose.every(18.months, total: 10, mday: 10..15)

    # every Tuesday, every other month
    recurrences << Montrose.every(2.months, on: :tuesday)

    # yearly in June and July for 10 occurrences
    recurrences << Montrose.yearly(month: [:june, :july], total: 10)

    File.open(Rails.root.join("app/javascript/laterose/__tests__/fixtures.ts").to_s, 'w') do |f|
      fixtures = {
        recurrences: recurrences.map do |recurrence|
          { recurrence: Types::RecurrenceTransform.transform(recurrence), events: recurrence.events.take(10) }
        end
      }
      f.write(
        <<~EOS
          // tslint:disable
          // This file is autogenerated by rake fixtures:generate_montrose.
          // To modify it, change the code for that task and rerun it.
          export const fixtures = #{JSON.pretty_generate(fixtures)};
        EOS
      )
    end

    puts "#{recurrences.size} recurrences written to fixture file."
  end
end
