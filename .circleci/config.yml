# Ruby CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-ruby/ for more details
#
version: 2
jobs:
  build:
    docker:
      - image: circleci/ruby:2.5-node
    working_directory: ~/repo
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true

    # Populate docker-dependencies-data container from circleci cache
    # - restore_cache:
    #     keys:
    #       - v1-dependencies-cache-{{ arch }}-{{ .Branch }}-{{ checksum "Gemfile.lock" }}-{{ checksum "yarn.lock" }}
    #       - v1-dependencies-cache-{{ arch }}-{{ .Branch }}
    #       - v1-dependencies-cache-{{ arch }}
    # - run:
    #     name: Restoring bundler cache into docker volumes
    #     command: |
    #       mkdir -p ~/dependencies-cache
    #       docker-compose -f docker-compose.yml -f docker-compose.circle.yml up --no-start docker-dependencies-cache
    #       docker cp ~/dependencies-cache/. docker-dependencies-cache:/backup
    #       docker-compose -f docker-compose.yml -f docker-compose.circle.yml up --no-recreate docker-dependencies-cache
    #       docker rm -f docker-dependencies-cache

      # build and start docker images
      - run: |
          echo $DOCKER_PASSWORD | docker login -u $DOCKER_USER --password-stdin
          docker-compose -f docker-compose.yml -f docker-compose.circle.yml up --build --detach
          docker-compose ps

      - run: docker-compose run web bin/rails test

      - run: docker push airhorns/ifm:$CIRCLE_SHA1

      - deploy:
          name: Deploy Master to GKE
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              docker run airhorns/ifm:$CIRCLE_SHA1 config/deploy/deploy.sh
            fi

      # Back up the same volume to circle cache
      # - run:
      #     name: Backing up bundler cache from docker volumes
      #     command: |
      #       docker-compose -f docker-compose.yml -f docker-compose.circle.yml run --name docker-dependencies-cache docker-dependencies-cache backup
      #       docker cp docker-dependencies-cache:/backup/. ~/dependencies-cache
      #       docker rm -f docker-dependencies-cache
      #
      # - save_cache:
      #     key: v1-dependencies-cache-{{ arch }}-{{ .Branch }}-{{ checksum "Gemfile.lock" }}-{{ checksum "yarn.lock" }}
      #     paths:
      #       - ~/dependencies-cache
